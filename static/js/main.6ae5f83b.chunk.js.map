{"version":3,"sources":["components/NavBar/logo.svg","config/config.js","store/actions/auth.js","store/actions/actionTypes.js","hoc/WithAuth.js","components/AuthNavItem/AuthNavItem.js","components/NavBar/NavBar.js","components/AboutAlert/AboutAlert.js","graphql/queries.js","graphql/graphqlClient.js","store/actions/repo.js","components/table/Loader/Loader.js","components/RepoInfo/RepoInfo.js","components/RepoInfo/RepoInfo.functions.js","components/RepoCommits/RepoCommits.js","components/RepoCommits/RepoCommits.functions.js","components/ShowMarkdown/ShowMarkdown.js","components/RepoReadme/RepoReadme.js","pages/AboutPage.js","store/actions/meters.js","components/MetersList/MetersList.functions.js","components/MetersList/MetersList.js","pages/MetersPage.js","store/actions/readings.js","components/ReadingsList/ReadingsList.functions.js","components/ReadingsList/ReadingsList.js","pages/ReadingsPage.js","pages/HomePage.js","components/Auth/Auth.js","pages/ProfilePage.js","hoc/PrivateRoute.js","App.js","store/reducers/meters.js","store/reducers/readings.js","store/reducers/repo.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js","components/table/Loader/Loader.module.scss"],"names":["module","exports","window","ENV","baseUrl","serverUrl","authLogin","dispatch","a","authLoginStart","axios","get","withCredentials","then","res","authLoginSuccess","data","catch","e","authLoginError","response","status","location","href","authUser","authLogout","type","user","error","withAuth","ComposedComponent","mapDispatchToProps","connect","state","auth","props","useEffect","WithAuth","authState","to","className","src","photo","width","height","alt","loading","displayName","size","icon","faSignInAlt","NavBar","Navbar","collapseOnSelect","expand","bg","variant","logo","Toggle","aria-controls","Collapse","Nav","exact","activeClassName","NavDropdown","title","id","Item","Divider","AboutAlert","repoUrl","useState","show","setShow","Alert","onClose","dismissible","Heading","target","rel","GET_REPO_INFO","gql","GET_REPO_FIRST_COMMITS","GET_REPO_README","graphqlClient","ApolloClient","uri","headers","Authorization","process","REACT_APP_API_GITHUB_KEY","fetchRepoStart","fetchRepoError","Loader","classes","RepoInfo","collaborators","lang","langSize","fetchRepoInfo","repository","repoInfo","setLoading","Container","Media","color","faGithub","Body","name","owner","url","Badge","pill","as","faUser","login","description","faHistory","moment","createdAt","format","faComment","pushedAt","repoHeader","languages","totalSize","ProgressBar","edges","map","el","style","background","node","now","key","faCircle","toFixed","avatarUrl","RepoCommits","commits","repoCommits","fetchRepoFirstCommits","totalCount","join","messageHeadline","commitUrl","oid","committedDate","ShowMarkdown","dangerouslySetInnerHTML","__html","marked","text","RepoReadme","file","repoReadme","fetchRepoReadme","query","variables","console","log","object","ref","history","repo","setKey","Tabs","mountOnEnter","activeKey","onSelect","k","Tab","eventKey","fetchMetersSuccess","meters","MetersList","fetchMeters","faCogs","faFile","faTimes","faTrash","value","metersList","fetchReadingsSuccess","readings","ReadingsList","fetchReadings","delta","time","readingsList","HomePage","Button","onClick","block","faSignOutAlt","faGoogle","ProfilePage","children","rest","render","pathname","from","App","path","component","AboutPage","initialState","loaded","signing","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","client","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6ae5f83b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.92eec2f8.svg\";","\nif (process.env.NODE_ENV === 'development') {\n  window.ENV = {\n    baseUrl: '',\n    serverUrl: 'https://localhost:5000/'\n    // serverUrl: 'https://ais-code.ru/'\n  }\n\n} else if (process.env.NODE_ENV === 'production') {\n  window.ENV = {\n    baseUrl: '',\n    serverUrl: 'https://ais-code.ru/'\n  }\n}\n","import axios from 'axios'\nimport {\n  FETCH_LOGIN_START,\n  FETCH_LOGIN_SUCCESS,\n  FETCH_LOGIN_ERROR,\n  FETCH_LOGOUT\n} from './actionTypes'\n\nexport function authLogin() {\n  return async dispatch => {\n    dispatch(authLoginStart())\n    try {\n      axios.get(`${window.ENV.serverUrl}api/user`, {withCredentials: true})\n        .then(res => {\n          dispatch(authLoginSuccess(res.data))\n\n        })\n        .catch(e => {\n          dispatch(authLoginError(e))\n          if(e.response.status === 401){\n            window.location.href = `${window.ENV.serverUrl}auth/google`\n          }\n        })\n\n    } catch (e) {\n      dispatch(authLoginError(e))\n    }\n  }\n}\n\nexport function authUser() {\n  return async dispatch => {\n    dispatch(authLoginStart())\n    try {\n      axios.get(`${window.ENV.serverUrl}api/user`, {withCredentials: true})\n        .then(res => {\n          dispatch(authLoginSuccess(res.data))\n\n        })\n        .catch(e => {\n          dispatch(authLoginError(e))\n        })\n\n    } catch (e) {\n      dispatch(authLoginError(e))\n    }\n  }\n}\n\nexport function authLogout() {\n  return async dispatch => {\n    dispatch(authLogoutStart())\n    try {\n      window.location.href = `${window.ENV.serverUrl}auth/logout`\n    } catch (e) {\n    }\n  }\n}\n\nexport function authLoginStart() {\n  return {\n    type: FETCH_LOGIN_START\n  }\n}\n\nexport function authLoginSuccess(user) {\n  return {\n    type: FETCH_LOGIN_SUCCESS,\n    user\n  }\n}\n\nexport function authLoginError(e) {\n  return {\n    type: FETCH_LOGIN_ERROR,\n    error: e\n  }\n}\n\nexport function authLogoutStart() {\n  return {\n    type: FETCH_LOGOUT\n  }\n}\n","export const FETCH_METERS_START = 'FETCH_METERS_START'\nexport const FETCH_METERS_SUCCESS = 'FETCH_METERS_SUCCESS'\nexport const FETCH_METERS_ERROR = 'FETCH_METERS_ERROR'\n\nexport const FETCH_READINGS_SUCCESS = 'FETCH_READINGS_SUCCESS'\nexport const FETCH_READINGS_ERROR = 'FETCH_READINGS_ERROR'\n\nexport const FETCH_REPO_START = 'FETCH_REPO_START'\nexport const FETCH_REPO_SUCCESS = 'FETCH_REPO_SUCCESS'\nexport const FETCH_REPO_README_SUCCESS = 'FETCH_REPO_README_SUCCESS'\nexport const FETCH_REPO_FIRST_COMMITS_SUCCESS = 'FETCH_REPO_FIRST_COMMITS_SUCCESS'\nexport const FETCH_REPO_ERROR = 'FETCH_REPO_ERROR'\n\nexport const FETCH_LOGIN_START = 'FETCH_LOGIN_START'\nexport const FETCH_LOGIN_SUCCESS = 'FETCH_LOGIN_SUCCESS'\nexport const FETCH_LOGIN_ERROR = 'FETCH_LOGIN_ERROR'\n\nexport const FETCH_LOGOUT = 'FETCH_LOGOUT'\n","import {authLogin, authLogout, authUser} from '../store/actions/auth'\nimport {connect} from 'react-redux'\nimport React, {useEffect} from 'react'\n\nconst withAuth = ComposedComponent => {\n  const mapStateToProps = state => ({\n    user: state.auth.user\n  })\n\n  const mapDispatchToProps = {\n    authUser,\n    authLogout,\n    authLogin\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(\n    (props) => {\n      const {user, authUser} = props\n      useEffect(() => {authUser()}, [authUser])\n\n      return user && <ComposedComponent {...props}/>\n    }\n  )\n}\n\nexport default withAuth\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {faSignInAlt} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport WithAuth from '../../hoc/WithAuth'\n\nconst AuthNavItem = (props) => {\n  const {user} = props\n\n  if (user.authState) {\n    return (\n      <Link to=\"/profile\" className=\"navbar-brand\">\n        <img src={user.photo} width=\"30\" height=\"30\"\n             className=\"d-inline-block align-top rounded-circle mr-2\"\n             alt=\"\" loading=\"lazy\"/>\n        {user.displayName}\n      </Link>\n    )\n  } else {\n    return <>\n      <Link to=\"/profile\" className=\"navbar-brand\">\n        <FontAwesomeIcon className=\"mx-2 my-auto\" size=\"1x\" icon={faSignInAlt}/>\n        Sing in...\n      </Link>\n    </>\n  }\n}\n\nexport default WithAuth(AuthNavItem)\n","import React from 'react'\nimport logo from './logo.svg'\nimport {Link, NavLink} from 'react-router-dom'\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport AuthNavItem from '../AuthNavItem/AuthNavItem'\n\nconst NavBar = props => {\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          <img src={logo} width=\"30\" height=\"30\"\n               className=\"d-inline-block align-top mr-2\"\n               alt=\"\" loading=\"lazy\"/>\n          Water meters IOT\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">\n            <NavLink exact to=\"/\" activeClassName=\"active\" className=\"nav-link\">Home</NavLink>\n            <NavLink exact to=\"/meters\" activeClassName=\"active\" className=\"nav-link\">Meters</NavLink>\n            <NavLink exact to=\"/readings\" activeClassName=\"active\" className=\"nav-link\">Readings</NavLink>\n            <NavLink to=\"/about\" activeClassName=\"active\" className=\"nav-link\">About app</NavLink>\n\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider/>\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <AuthNavItem/>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\n\nexport default NavBar\n","import React, {useState} from 'react'\nimport {Alert} from 'react-bootstrap'\n\nconst AboutAlert = (props) => {\n  const {repoUrl} = props\n  const [show, setShow] = useState(true)\n\n  if (show) {\n    return (\n      <>\n        <Alert variant=\"info\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>More info:</Alert.Heading>\n          This page uses <code>GraphQL and Apollo</code> for Github API connection.\n          You can get more information about project\n          and view app's code on those Github repos by&nbsp;\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={repoUrl}>link</a>.\n        </Alert>\n      </>\n    )\n  }\n  return null\n}\nexport default AboutAlert\n","import gql from 'graphql-tag'\n\n\nexport const GET_REPO_INFO = gql`\n    query {\n        repository(name: \"water-meter-iot\", owner: \"aiscorp\") {\n            name\n            owner {\n                login\n                url\n                avatarUrl\n            }\n            description\n            createdAt\n            pushedAt\n            languages(first: 10) {\n                edges {                    \n                    node {\n                        color\n                        name\n                    }\n                    size\n                }\n                totalSize\n                totalCount\n            }\n            collaborators(first: 10) {\n                edges {\n                    node {\n                        name\n                        login\n                        avatarUrl\n                        url\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const GET_REPO_FIRST_COMMITS = gql`\n    query {\n        repository(name: \"water-meter-iot\", owner: \"aiscorp\") {\n            ref(qualifiedName: \"master\") {\n                target {\n                    ... on Commit {\n                        history(first: 10) {\n                            totalCount\n                            edges {\n                                node {\n                                    messageHeadline\n                                    oid\n                                    commitUrl\n                                    committedDate\n                                }\n                            }\n                        }  \n                    }\n                }\n            }\n        }\n    }\n`\n// FORMAT of $file = 'master:' + filePath\nexport const GET_REPO_README = gql`\n    query repository($file: String!) {\n        repository(name: \"water-meter-iot\", owner: \"aiscorp\") {\n            object(expression: $file) {\n                ... on Blob {\n                    text\n                }\n            }\n        }\n    }\n`\n\n","import ApolloClient from 'apollo-boost'\n\nconst graphqlClient = new ApolloClient({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: `bearer ${process.env.REACT_APP_API_GITHUB_KEY}`\n  }\n})\n\nexport default graphqlClient\n","import {\n  FETCH_REPO_ERROR, FETCH_REPO_FIRST_COMMITS_SUCCESS,\n  FETCH_REPO_README_SUCCESS, FETCH_REPO_START,\n  FETCH_REPO_SUCCESS\n} from './actionTypes'\nimport {GET_REPO_FIRST_COMMITS, GET_REPO_INFO, GET_REPO_README} from '../../graphql/queries'\nimport graphqlClient from '../../graphql/graphqlClient'\n\n\nexport function fetchRepoInfo() {\n  return async dispatch => {\n    dispatch(fetchRepoStart())\n    try {\n      const res = await graphqlClient.query({query: GET_REPO_INFO})\n\n      dispatch(fetchRepoInfoSuccess(res.data))\n    } catch (e) {\n      dispatch(fetchRepoError(e))\n    }\n  }\n}\n\nexport function fetchRepoReadme(file) {\n  return async dispatch => {\n    dispatch(fetchRepoStart())\n    try {\n      const res = await graphqlClient.query(\n        {\n          query: GET_REPO_README,\n          variables: {\n            file: `master:${file}`\n          }\n        })\n\n      console.log(`Query(master:${file}):`,\n        {[file]: res.data.repository.object}) // DEBUG\n\n      dispatch(fetchRepoReadmeSuccess(\n        {[file]: res.data.repository.object}))\n    } catch (e) {\n      dispatch(fetchRepoError(e))\n    }\n  }\n}\n\nexport function fetchRepoFirstCommits() {\n  return async dispatch => {\n    dispatch(fetchRepoStart())\n    try {\n      const res = await graphqlClient.query({query: GET_REPO_FIRST_COMMITS})\n\n      dispatch(fetchRepoFirstCommitsSuccess(res.data.repository.ref.target.history))\n    } catch (e) {\n      dispatch(fetchRepoError(e))\n    }\n  }\n}\n\nexport function fetchRepoInfoSuccess(data) {\n  return {\n    type: FETCH_REPO_SUCCESS,\n    repoInfo: data\n  }\n}\n\nexport function fetchRepoReadmeSuccess(data) {\n  return {\n    type: FETCH_REPO_README_SUCCESS,\n    repoReadme: data\n  }\n}\n\nexport function fetchRepoFirstCommitsSuccess(data) {\n  return {\n    type: FETCH_REPO_FIRST_COMMITS_SUCCESS,\n    repoCommits: data\n  }\n}\n\n\nexport function fetchRepoStart() {\n  return {\n    type: FETCH_REPO_START\n  }\n}\n\nexport function fetchRepoError(e) {\n  return {\n    type: FETCH_REPO_ERROR,\n    error: e\n  }\n}\n","import React from \"react\"\nimport classes from './Loader.module.scss'\n\nconst Loader = () => (\n  <div className={classes.Loader}>\n    <div className={classes[\"lds-dual-ring\"]}></div>\n  </div>\n)\n\nexport default Loader\n","import React, {useEffect, useState} from 'react'\nimport {collabStat, langStat, repoHeader} from './RepoInfo.functions'\nimport {Container} from 'react-bootstrap'\nimport Loader from '../table/Loader/Loader'\n\nconst RepoInfo = (props) => {\n  const {fetchRepoInfo} = props\n  const {repository} = props.repoInfo\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchRepoInfo().then(() => {\n      setLoading(false)\n    })\n  }, [fetchRepoInfo])\n\n  if (loading) {\n    return <Loader/>\n  } else {\n    return (\n      <Container className=\"px-2 my-1\">\n        {repoHeader(repository)}\n        {langStat(repository.languages, repository.languages.totalSize)}\n        {collabStat(repository.collaborators)}\n      </Container>\n    )\n  }\n}\nexport default RepoInfo\n\n\n","import {Badge, Media, ProgressBar} from 'react-bootstrap'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCircle, faComment, faHistory, faUser} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\nimport moment from 'moment'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\n\nexport const repoHeader = (repository) => (\n  <>\n    <Media>\n      <FontAwesomeIcon className=\"mr-4\" color=\"grey\" size=\"5x\" icon={faGithub}/>\n      {/*<img className=\"mr-2\" width={64} height={64} src={repository.owner.avatarUrl}/>*/}\n      <Media.Body>\n        <h4>Repository name:&nbsp;{repository.name}\n          &nbsp;\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={repository.owner.url}>\n            <Badge pill as=\"h5\" variant=\"success\">\n              <FontAwesomeIcon icon={faUser}/>&nbsp;{repository.owner.login}\n            </Badge>{' '}</a></h4>\n        <p>\n          <i>{repository.description}</i>\n        </p>\n        <p>\n          <FontAwesomeIcon color=\"grey\" icon={faHistory}/>&nbsp;Repo created:&nbsp;\n          {moment(repository.createdAt).format('MM/DD/YYYY h:mma')};\n          &nbsp;\n          <FontAwesomeIcon color=\"grey\" icon={faComment}/>&nbsp;Repo last commit:&nbsp;\n          {moment(repository.pushedAt).format('MM/DD/YYYY h:mma')}\n          &nbsp;\n        </p>\n      </Media.Body>\n    </Media>\n  </>\n)\n\nexport const langStat = (lang, langSize) => (\n  <>\n    <h4>Languages statistics:</h4>\n    <ProgressBar>\n      {lang.edges.map((el, id) => {\n        return (\n          <ProgressBar style={{background: el.node.color}}\n                       now={(el.size * 100 / langSize)}\n                       key={id}/>\n        )\n      })}\n    </ProgressBar>\n    <ul className=\"list-inline\">\n      {lang.edges.map((el, id) => {\n        return (\n          <li className=\"list-inline-item mr-3\" key={id}>\n            <FontAwesomeIcon color={el.node.color} icon={faCircle}/>&nbsp;\n            <b>{el.node.name}</b>\n            <i>:&nbsp;{el.size} bytes,&nbsp;{(el.size * 100 / langSize).toFixed(0)}%</i>\n          </li>\n        )\n      })}\n    </ul>\n  </>\n)\n\nexport const collabStat = (collaborators) => (\n  <>\n    <h4>Collaborators:</h4>\n    <ul className=\"list-unstyled\">\n      {collaborators.edges.map((el, id) => {\n        return (\n          <li className=\"list-inline-item mr-3\" key={id}>\n            <img className=\"mr-2 rounded-circle\" width={48} height={48}\n                 alt=\"\" src={el.node.avatarUrl}/>&nbsp;\n            <b>{el.node.name}</b>;&nbsp;&nbsp;\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={el.node.url}>\n              <FontAwesomeIcon icon={faUser}/>&nbsp;\n              <i>{el.node.login}</i>\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  </>\n)\n","import React, {useEffect, useState} from 'react'\nimport {Container} from 'react-bootstrap'\nimport Loader from '../table/Loader/Loader'\nimport {commitsList} from './RepoCommits.functions'\n\nconst RepoCommits = (props) => {\n  const {repoCommits, fetchRepoFirstCommits} = props\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchRepoFirstCommits().then(() => {\n      setLoading(false)\n    })\n  }, [fetchRepoFirstCommits])\n\n  if (loading) {\n    return <Loader/>\n  } else {\n\n    return (\n      <Container className=\"px-2 my-1\">\n        {commitsList(repoCommits)}\n      </Container>\n    )\n  }\n}\nexport default RepoCommits\n\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faHistory} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport React from 'react'\nimport {Media} from 'react-bootstrap'\n\nexport const commitsList = (commits) => (\n  <>\n    <h5>Total commits number:&nbsp;{commits.totalCount}</h5>\n    <h5>Last commits:&nbsp;</h5>\n    <ul className=\"list-unstyled\">\n      {commits.edges.map((el, key) => (\n        <Media className={['p-2', key % 2 ? 'bg-secondary text-white rounded' : ''].join(' ')} as=\"li\" key={key}>\n          <FontAwesomeIcon className=\"mx-2 my-auto\" color={key % 2 ? 'white' : 'grey'} size=\"1x\" icon={faHistory}/>\n          <Media.Body>\n            <div className=\"d-flex\">\n              <b className=\"flex-grow\">{el.node.messageHeadline}</b>&nbsp;\n              <a className=\"ml-auto text-reset text-truncate\" target=\"_blank\" rel=\"noopener noreferrer\"\n                 href={el.node.commitUrl}>\n                <i>#{el.node.oid}</i>\n              </a>\n            </div>\n            <i>Committed at:&nbsp;{moment(el.node.committedDate).format('MM/DD/YYYY h:mma')}</i>\n          </Media.Body>\n        </Media>\n      ))}\n    </ul>\n  </>\n)\n","import React from 'react'\nimport marked from 'marked'\n\nconst ShowMarkdown = props => (\n  <div\n    dangerouslySetInnerHTML={{__html: marked(props.text)}}\n    className=\"col mx-auto px-2 my-1\"\n  />\n)\n\nexport default ShowMarkdown\n","import React, {useEffect, useState} from 'react'\nimport {Container} from 'react-bootstrap'\nimport Loader from '../table/Loader/Loader'\nimport ShowMarkdown from '../ShowMarkdown/ShowMarkdown'\n\nconst RepoReadme = (props) => {\n  const {file, repoReadme, fetchRepoReadme} = props\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchRepoReadme(file).then(() => {\n      setLoading(false)\n    })\n  }, [fetchRepoReadme, file])\n\n  if (loading) {\n    return <Loader/>\n  } else {\n    return (\n      <Container className=\"px-2 my-1\">\n        <ShowMarkdown text={repoReadme[file].text}/>\n      </Container>\n    )\n  }\n}\nexport default RepoReadme\n\n","import React, {useState} from 'react'\nimport AboutAlert from '../components/AboutAlert/AboutAlert'\nimport {connect} from 'react-redux'\nimport {fetchRepoFirstCommits, fetchRepoInfo, fetchRepoReadme} from '../store/actions/repo'\nimport {Container, Tabs, Tab} from 'react-bootstrap'\nimport RepoInfo from '../components/RepoInfo/RepoInfo'\nimport RepoCommits from '../components/RepoCommits/RepoCommits'\nimport RepoReadme from '../components/RepoReadme/RepoReadme'\n\nconst AboutPage = props => {\n  const {repoInfo, repoReadme, repoCommits, fetchRepoInfo, fetchRepoReadme, fetchRepoFirstCommits} = props\n  const repoUrl = 'https://github.com/aiscorp/water-meter-iot'\n\n  const [key, setKey] = useState('info')\n\n  return (\n    <Container className=\"my-2\">\n      <AboutAlert repoUrl={repoUrl}/>\n      <Tabs className=\"\" mountOnEnter={true} activeKey={key} onSelect={k => setKey(k)}>\n        <Tab eventKey=\"info\" title=\"Git information\">\n          <RepoInfo repoInfo={repoInfo} fetchRepoInfo={fetchRepoInfo}/>\n        </Tab>\n        <Tab eventKey=\"commits\" title=\"Commits\">\n          <RepoCommits repoCommits={repoCommits} fetchRepoFirstCommits={fetchRepoFirstCommits}/>\n        </Tab>\n        <Tab eventKey=\"readme1\" title=\"Main readme\">\n          <RepoReadme file='README.md' repoReadme={repoReadme} fetchRepoReadme={fetchRepoReadme}/>\n        </Tab>\n        <Tab eventKey=\"readme2\" title=\"Device readme\">\n          <RepoReadme file='nodemcu/readme.md' repoReadme={repoReadme} fetchRepoReadme={fetchRepoReadme}/>\n        </Tab>\n        <Tab eventKey=\"readme3\" title=\"Server readme\">\n          <RepoReadme file='server/readme.md' repoReadme={repoReadme} fetchRepoReadme={fetchRepoReadme}/>\n        </Tab>\n        <Tab eventKey=\"readme4\" title=\"Frontend readme\">\n          <RepoReadme file='client/README.md' repoReadme={repoReadme} fetchRepoReadme={fetchRepoReadme}/>\n        </Tab>\n      </Tabs>\n\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n    repoInfo: state.repo.repoInfo,\n    repoReadme: state.repo.repoReadme,\n    repoCommits: state.repo.repoCommits,\n    loading: state.repo.loading\n})\n\nconst mapDispatchToProps = {\n  fetchRepoReadme,\n  fetchRepoFirstCommits,\n  fetchRepoInfo\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutPage)\n","import axios from 'axios'\nimport {FETCH_METERS_ERROR, FETCH_METERS_START, FETCH_METERS_SUCCESS} from './actionTypes'\n\nexport function fetchMeters() {\n  return async dispatch => {\n    dispatch(fetchMetersStart())\n    try {\n      const res = await axios.get(`${window.ENV.serverUrl}api/test/meters`, {})\n      const meters = res.data\n      dispatch(fetchMetersSuccess(meters))\n    } catch (e) {\n      dispatch(fetchMetersError(e))\n    }\n  }\n}\n\nexport function fetchMetersStart() {\n  return {\n    type: FETCH_METERS_START\n  }\n}\n\nexport function fetchMetersSuccess(meters) {\n  return {\n    type: FETCH_METERS_SUCCESS,\n    meters\n  }\n}\n\nexport function fetchMetersError(e) {\n  return {\n    type: FETCH_METERS_ERROR,\n    error: e\n  }\n}\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCogs, faFile, faTimes, faTrash} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\nimport {Media} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nexport const metersList = (meters) => (\n  <>\n    <h5>Meters list:&nbsp;</h5>\n    <ul className=\"list-unstyled\">\n      {meters.map((el, key) => (\n        <Media className={['p-2 rounded overlay', key % 2 ? 'bg-secondary text-white' : 'bg-light'].join(' ')} as=\"li\" key={key}>\n          <FontAwesomeIcon className=\"mx-2 my-auto\" color={key % 2 ? 'white' : 'grey'} size=\"1x\" icon={faCogs}/>\n          <Media.Body>\n            <div className=\"d-flex\">\n              <b className=\"flex-grow mr-auto\">{el.type}</b>&nbsp;\n              <Link to={'/readings/:'+el.id}  className=\"mr-2 text-reset text-truncate\">\n                <FontAwesomeIcon color={key % 2 ? 'white' : 'grey'} size=\"1x\" icon={faFile}/>\n                &nbsp;Readings\n              </Link>\n              <Link to={'/meter/unsub/:'+el.id}  className=\"mr-2 text-reset text-truncate\">\n                <FontAwesomeIcon color={key % 2 ? 'white' : 'grey'} size=\"1x\" icon={faTimes}/>\n                &nbsp;Unsubscribe\n              </Link>\n              <Link to={'/meter/delete/:'+el.id}  className=\"text-reset text-truncate\">\n                <FontAwesomeIcon color={key % 2 ? 'white' : 'grey'} size=\"1x\" icon={faTrash}/>\n                &nbsp;Delete\n              </Link>\n            </div>\n            <i>Meter id:&nbsp;{el.id}, Value:&nbsp;<b>{el.value}&nbsp;m3</b></i>\n          </Media.Body>\n\n        </Media>\n      ))}\n    </ul>\n  </>\n)\n","import React, {useEffect, useState} from 'react'\nimport {Container} from 'react-bootstrap'\nimport Loader from '../table/Loader/Loader'\nimport {metersList} from './MetersList.functions'\n\nconst MetersList = (props) => {\n  const {meters, fetchMeters} = props\n\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchMeters().then(() => {\n      setLoading(false)\n    })\n  }, [fetchMeters])\n\n  if (loading) {\n    return <Loader/>\n  } else {\n    return (\n      <Container className=\"px-2 my-1\">\n        {metersList(meters)}\n      </Container>\n    )\n  }\n}\nexport default MetersList\n\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchMeters} from '../store/actions/meters'\nimport MetersList from '../components/MetersList/MetersList'\nimport {Container} from 'react-bootstrap'\n\nconst MetersPage = props => {\n  const {meters, fetchMeters} = props\n\n\n  return (\n    <Container className=\"my-2\">\n      <MetersList meters={meters} fetchMeters={fetchMeters}/>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  meters: state.meters.meters,\n  loading: state.meters.loading\n})\n\nconst mapDispatchToProps = {\n  fetchMeters\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetersPage)\n\n","import axios from 'axios'\nimport {FETCH_READINGS_ERROR, FETCH_READINGS_SUCCESS} from './actionTypes'\n\nexport function fetchReadings() {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`${window.ENV.serverUrl}api/test/readings`, {})\n      const readings = res.data\n      dispatch(fetchReadingsSuccess(readings))\n    } catch (e) {\n      dispatch(fetchReadingsError(e))\n    }\n  }\n}\n\nexport function fetchReadingsSuccess(readings) {\n  return {\n    type: FETCH_READINGS_SUCCESS,\n    readings\n  }\n}\n\nexport function fetchReadingsError(e) {\n  return {\n    type: FETCH_READINGS_ERROR,\n    error: e\n  }\n}\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faFile} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\nimport {Media} from 'react-bootstrap'\nimport moment from 'moment'\n\nexport const readingsList = (readings) => (\n  <>\n    <h5>Readings list:&nbsp;</h5>\n    <ul className=\"list-unstyled\">\n      {readings.map((el, key) => (\n        <Media className={['p-2 rounded overlay', key % 2 ? 'bg-secondary text-white' : 'bg-light'].join(' ')} as=\"li\"\n               key={key}>\n          <FontAwesomeIcon className=\"mx-2 my-auto\" color={key % 2 ? 'white' : 'grey'} size=\"1x\" icon={faFile}/>\n          <Media.Body className=\"d-flex\">\n            <b className=\"flex-grow mr-auto\">Value:&nbsp;{el.value}, Delta:&nbsp;{el.delta}</b>&nbsp;\n            <i>Date:&nbsp;{moment(el.time).format('MM/DD/YYYY h:mma')}, Meter id:&nbsp;{el.id}</i>\n          </Media.Body>\n        </Media>\n      ))}\n    </ul>\n  </>\n)\n","import React, {useEffect, useState} from 'react'\nimport {Container} from 'react-bootstrap'\nimport Loader from '../table/Loader/Loader'\nimport {readingsList} from './ReadingsList.functions'\n\nconst ReadingsList = (props) => {\n  const {readings, fetchReadings} = props\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchReadings().then(() => {\n      setLoading(false)\n    })\n  }, [fetchReadings])\n\n\n  if (loading) {\n    return <Loader/>\n  } else {\n    return (\n      <Container className=\"px-2 my-1\">\n        {readingsList(readings)}\n      </Container>\n    )\n  }\n}\nexport default ReadingsList\n\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Container} from 'react-bootstrap'\nimport {fetchReadings} from '../store/actions/readings'\nimport ReadingsList from '../components/ReadingsList/ReadingsList'\n\n\nconst ReadingsPage = props => {\n  const {readings, fetchReadings} = props\n\n\n  return (\n    <Container className=\"my-2\">\n      <ReadingsList readings={readings} fetchReadings={fetchReadings}/>\n    </Container>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    readings: state.readings.readings\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchReadings: () => dispatch(fetchReadings())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadingsPage)\n","import React from 'react'\nimport {Container} from 'react-bootstrap'\n\nconst HomePage = props => {\n  return (\n    <Container className=\"my-2\">\n      <h2>Home page</h2>\n    </Container>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport {Button} from 'react-bootstrap'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\nimport {faGoogle} from '@fortawesome/free-brands-svg-icons'\nimport WithAuth from '../../hoc/WithAuth'\n\nconst Auth = (props) => {\n  const {user, authLogin, authLogout} = props\n\n  if (user.authState) {\n    return (\n      <div className=\"m-0 p-3 m-md-5 p-md-5 bg-white shadow-lg\">\n        <h2>Hello {user.displayName}!</h2>\n        <p>You are logged in to the app, if you want to log out, click the button below:</p>\n        <Button onClick={authLogout} size=\"lg\" block>\n          <FontAwesomeIcon className=\"mx-2 my-auto\" size=\"1x\" icon={faSignOutAlt}/>\n          Log Out by Google\n        </Button>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"m-0 p-3 m-md-5 p-md-5 bg-white shadow-lg\">\n        <h2>Please sign in with your Google Account</h2>\n        <p>This app does not receive, use, or store your confidential data.</p>\n        <Button onClick={authLogin} size=\"lg\" block>\n          <FontAwesomeIcon className=\"mx-2 my-auto\" size=\"1x\" icon={faGoogle}/>\n          Sign in with Google\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default WithAuth(Auth)\n\n","import React from 'react'\nimport {Container} from 'react-bootstrap'\nimport Auth from '../components/Auth/Auth'\n\nconst ProfilePage = props => {\n  return (\n    <Container className=\"my-2\">\n      <Auth/>\n    </Container>\n  )\n}\n\nexport default ProfilePage\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport WithAuth from './WithAuth'\n\nconst PrivateRoute = (props) => {\n  const {user, children, ...rest} = props\n\n  return (\n    <Route\n      {...rest}\n      render={\n        ({location}) =>\n          user.authState ?\n            (children)\n            :\n            (<Redirect to={{pathname: '/profile', state: {from: location}}}/>)\n      }\n    />\n  )\n}\n\nexport default WithAuth(PrivateRoute)\n\n","import React from 'react'\nimport {\n  Switch, Route\n} from 'react-router-dom'\nimport NavBar from './components/NavBar/NavBar'\nimport AboutPage from './pages/AboutPage'\nimport MetersPage from './pages/MetersPage'\n// import {TableDataProvider} from './components/TableDataProvider/TableDataProvider'\nimport ReadingsPage from './pages/ReadingsPage'\nimport HomePage from './pages/HomePage'\nimport ProfilePage from './pages/ProfilePage'\nimport PrivateRoute from './hoc/PrivateRoute'\n\nfunction App(props) {\n  console.log('App.user', props.user)\n  return (\n    <>\n      <NavBar/>\n      <Switch>\n        {/*<Route exact path='/table/:size' component={TableDataProvider}/>*/}\n        <PrivateRoute path=\"/meters\">\n          <MetersPage/>\n        </PrivateRoute>\n        <PrivateRoute path=\"/readings\">\n          <ReadingsPage/>\n        </PrivateRoute>\n\n        <Route path=\"/profile\" component={ProfilePage}/>\n        <Route path=\"/about\" component={AboutPage}/>\n        <Route path=\"/\" component={HomePage}/>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import {FETCH_METERS_ERROR, FETCH_METERS_START, FETCH_METERS_SUCCESS} from '../actions/actionTypes'\n\nconst initialState = {\n  loading: true,\n  error: null,\n  meters: []\n}\n\nexport default function metersReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_METERS_START:\n      return {\n        ...state, loading: true\n      }\n    case FETCH_METERS_SUCCESS:\n      return {\n        ...state, loading: false, meters: action.meters\n      }\n    case FETCH_METERS_ERROR:\n      return {\n        ...state, loading: false, error: action.error\n      }\n\n\n    default:\n      return state\n  }\n}\n","import {FETCH_READINGS_ERROR, FETCH_READINGS_SUCCESS} from '../actions/actionTypes'\n\nconst initialState = {\n  loaded: false,\n  error: null,\n  readings: []\n}\n\nexport default function readingsReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_READINGS_SUCCESS:\n      return {\n        ...state, loaded: true, readings: action.readings\n      }\n    case FETCH_READINGS_ERROR:\n      return {\n        ...state, error: action.error\n      }\n    default:\n      return state\n  }\n}\n","import {\n  FETCH_REPO_ERROR,\n  FETCH_REPO_FIRST_COMMITS_SUCCESS,\n  FETCH_REPO_README_SUCCESS,\n  FETCH_REPO_START,\n  FETCH_REPO_SUCCESS\n} from '../actions/actionTypes'\n\nconst initialState = {\n  loading: true,\n  error: null,\n  repoInfo: {},\n  repoReadme: {},\n  repoCommits: {}\n}\n\n\nexport default function repoReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_REPO_START:\n      return {\n        ...state, loading: true\n      }\n    case FETCH_REPO_SUCCESS:\n      return {\n        ...state, loading: false, repoInfo: action.repoInfo\n      }\n    case FETCH_REPO_README_SUCCESS:\n      return {\n        ...state, loading: false,\n        repoReadme: {...state.repoReadme, ...action.repoReadme}\n      }\n    case FETCH_REPO_FIRST_COMMITS_SUCCESS:\n      return {\n        ...state, loading: false, repoCommits: action.repoCommits\n      }\n    case FETCH_REPO_ERROR:\n      return {\n        ...state, loading: false, error: action.error\n      }\n\n\n    default:\n      return state\n  }\n}\n","import {FETCH_LOGIN_START, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_ERROR, FETCH_LOGOUT} from '../actions/actionTypes'\n\nconst initialState = {\n  user: {\n    authState: false\n  },\n  signing: false,\n  error: null\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_LOGIN_START:\n      return {\n        ...state, signing: true\n      }\n    case FETCH_LOGIN_SUCCESS:\n      return {\n        signing: false, user: action.user, error: null\n      }\n    case FETCH_LOGIN_ERROR:\n      return {\n        signing: false, user: {authState: false}, error: action.error\n      }\n    case FETCH_LOGOUT:\n      return {\n        ...initialState\n      }\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\nimport metersReducer from './meters'\nimport readingsReducer from './readings'\nimport repoReducer from './repo'\nimport authReducer from './auth'\n\nexport default combineReducers({\n  meters: metersReducer,\n  readings: readingsReducer,\n  repo: repoReducer,\n  auth: authReducer\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './config/config'\nimport './index.css'\nimport App from './App'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './store/reducers/rootReducer'\nimport graphqlClient from './graphql/graphqlClient'\nimport {ApolloProvider} from '@apollo/react-hooks'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\nconst app = (\n  <Provider store={store}>\n    <ApolloProvider client={graphqlClient}>\n      <Router basename={window.ENV.baseUrl}>\n          <App/>\n      </Router>\n    </ApolloProvider>\n  </Provider>\n\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2OjC9\",\"lds-dual-ring\":\"Loader_lds-dual-ring__3VLXW\"};"],"sourceRoot":""}